@done: 发布note后，将新发布的note显示出来：更新notes，并渲染
@done: 发布note后，将输入框清空
@done: markdown渲染引擎改用 markdown-it，效果更好
@done: 显示发布时间
@done: 将毫秒格式的时间转换成local time
@done: 按发布时间降序排列，新发布(即最后发布)的显示在最上面
@done: 按ctrl enter键发布
@done: 美化notes列表，去掉前缀点号
@done: 美化输入框
@done: 仿照twitter的时间格式化
@done: 新添的note下滑出现
@done: 输入框禁止缩放
@done: 刷新时，输入框的内容仍然保留
@done: 输入框focus时，有渐变边框
@done: 输入框autoresize
@done: 刚加载时，输入框从本地读取数据，如果超出高度，也自动扩宽
@done: 输入框的内容减少时，自动缩小
@done: 时间显示月份有问题
@done: 如果加载完了，将消息传给前端，不要再加载了
@done: 新添加的note后，立即删除最新的note，却删除了最后一个note
原因：在前端，新发布的note被push到notes末尾；而渲染出来的dom却放在最前；删除DOM时，却是按note在notes中的序号来的。
结果当然是将最后一个dom给删掉了。
这只是前端显示除了问题，后端删除的仍然是正确的note，因为发送给后端的数据是对的。
所以刷新后，显示仍然是正确的。
解决办法：
统一前端notes数据和DOM的排序方式。
DOM将最新的排在最前，notes也将最新的排在最前。
从而新发布的note插入notes数组的最前面，即unshift()方法
@done: 当内容为空时，将按钮调暗
@done: 不能发布空内容
@done: 美化删除按钮
@done: 新添加的note背景色由淡蓝色过白色
@done: 在界面左侧垂直显示notepad
@done: 输入即新加载页面时，预览输入的markdown
@done: 当发布note时，将preview清空

@todo: 美化markdown渲染效果
@todo: 输入框focus时，placeholder 颜色变浅
@todo: 最后一页，在底部显示“到底了”
@todo: 确认是否要删除
@todo: 识别note中的链接，可点击
@todo: 快删除到底，屏幕底部有空白时，加载下一页
@todo: 将edit, delete放在下拉框中
@todo: 代码超出页面宽度，可以scroll。<code>标签
@todo: 右上角搜索框


===========================================================
@done: 在主页展示notes
@done: 发布 note
@done: 将 markdown 格式的notes渲染成html
@done: 流媒体
@done: 删除note

@todo: 改用redis数据库
@todo: 搜索
@todo: 发布图片
@todo: 权限系统，需要输入密码登录，或者将输入框不放在主页
@todo: 编辑note
@todo: 重构代码